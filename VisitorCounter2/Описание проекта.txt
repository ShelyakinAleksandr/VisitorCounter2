VisitorCounter регистрирует вход/выход посетителей в Торговый Центр.
Сделано 9 контролеров. 
8 (GET ) на каждую дверь(4 на вход, 4 на выход). Все они обращаются к общей переменной «allVisitor»(object). 
В методах которые обращаются к переменной allVisitor, эта переменная блокируется оператором lock (пока идет её изменение или считывание) 
1 контроллер для получения статистики(Post). Принемает json файл формата 

{
  "dateStart": "2021-12-03T10:10:27.157Z",
  "dateEnd": "2021-12-03T10:10:27.157Z"
}

В обратку возвращаяет json, пример:
[
  {
    "date": "2021-11-29",
    "visitors": {
      "10:00": 43,
      "11:00": 48,
      "12:00": 67,
      "13:00": 80
    }
  },
  {
    "date": "2021-11-30",
    "visitors": {
      "12:00": 25,
      "13:00": 40,
      "14:00": 60,
      "15:00": 57,
      "16:00": 43
    }
  },
  {
    "date": "2021-12-02",
    "visitors": {
      "10:00": 60,
      "11:00": 325,
      "12:00": 502,
      "13:00": 576,
      "14:00": 105,
      "15:00": 22
    }
  },
  {
    "date": "2021-12-03",
    "visitors": {
      "10:00": 96,
      "11:00": 96,
      "12:00": 96
    }
  }
]

За один день отправляем только "dateStart"	
{
  "dateStart": "2021-12-03T10:10:27.157Z"
}

Описание хранимых процедур
1)
CREATE DEFINER=`Admin`@`%` PROCEDURE `StatisticVisitor`(_DateStart date,
								     _DateEnd date)
BEGIN

select DATE_FORMAT(DateTimeVisitor, '%Y-%m-%d') Date, разбивка на дату
	 DATE_FORMAT(DateTimeVisitor, '%H:00') Time , разбивка на время
	   sum(Entrance) as VisitorCount Сумма всех посетителей
from timevisitor
where if( _DateEnd is not null,
		Cast( DateTimeVisitor AS Date)	BETWEEN  _DateStart and _DateEnd,
          Cast( DateTimeVisitor AS Date) = _DateStart
        )
GROUP BY Date, Time групировка
  ORDER BY Date, Time сортировка
        ;

END

